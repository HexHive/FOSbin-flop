std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> root = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(5.04395239212837e-07, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(5.04395239212816e-07), std::make_tuple(5.04395239212816e-07));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node1 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(1.0003953021537826, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.02811676057308762), std::make_tuple(0.02811676057308762));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node2 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(-0.4966497856029343, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(1.4830094190961252e+40), std::make_tuple(1.4830094190961252e+40));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node3 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(0.4523711726810329, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.46795866030066396), std::make_tuple(0.46795866030066396));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node4 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(1.3847245226894904, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.184999942779541), std::make_tuple(0.184999942779541));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node5 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(0.45268787679702194, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(1.1042249363786338), std::make_tuple(1.1042249363786338));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node6 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(3.6893488147419103e+19, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(-2.0), std::make_tuple(-2.0));
char* buf_0 = (char*) malloc(11);
if(buf_0) { buffers_.push_back(buf_0); std::memcpy(buf_0, "\x57\xa3\x1e\xd7\x2f\x68\xd6\xa0\xfc\x3f", 10); } else { throw std::runtime_error("malloc failed"); }
char* buf_1 = (char*) malloc(11);
if(buf_1) { buffers_.push_back(buf_1); std::memcpy(buf_1, "\xb1\xb6\x4d\xc1\xf2\x8d\xd2\xfc\xfe\xbf", 10); } else { throw std::runtime_error("malloc failed"); }
char* buf_2 = (char*) malloc(11);
if(buf_2) { buffers_.push_back(buf_2); std::memcpy(buf_2, "\x92\xce\xfc\xc6\x64\xf6\x5b\x9d\xfe\x3f", 10); } else { throw std::runtime_error("malloc failed"); }
char* buf_3 = (char*) malloc(11);
if(buf_3) { buffers_.push_back(buf_3); std::memcpy(buf_3, "\xb8\x88\xa6\x4e\x74\x08\xed\xc9\xfe\x3f", 10); } else { throw std::runtime_error("malloc failed"); }
std::shared_ptr<fbf::FunctionIdentifierInternalNode<void, double, char*, char*>> node7 = std::make_shared<fbf::FunctionIdentifierInternalNode<void, double, char*, char*>>(std::make_tuple(), std::make_tuple(), std::make_tuple(buf_0,buf_1,0.6619858980995045,buf_2,buf_3));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node8 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(2.0, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(2.0), std::make_tuple(2.0));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node9 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(1.1619803583175077, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.5617597462207241), std::make_tuple(0.5617597462207241));
char* buf_4 = (char*) malloc(9);
if(buf_4) { buffers_.push_back(buf_4); std::memcpy(buf_4, "\x00\x00\x00\x00\x00\x00\x00\x00", 8); } else { throw std::runtime_error("malloc failed"); }
char* buf_5 = (char*) malloc(9);
if(buf_5) { buffers_.push_back(buf_5); std::memcpy(buf_5, "\x00\x00\x00\x00\x00\x00\xf0\x3f", 8); } else { throw std::runtime_error("malloc failed"); }
char* buf_6 = (char*) malloc(9);
if(buf_6) { buffers_.push_back(buf_6); std::memcpy(buf_6, "\x00\x00\x00\x00\x00\x00\x00\x80", 8); } else { throw std::runtime_error("malloc failed"); }
char* buf_7 = (char*) malloc(9);
if(buf_7) { buffers_.push_back(buf_7); std::memcpy(buf_7, "\x00\x00\x00\x00\x00\x00\xf0\x3f", 8); } else { throw std::runtime_error("malloc failed"); }
std::shared_ptr<fbf::FunctionIdentifierInternalNode<void, double, char*, char*>> node10 = std::make_shared<fbf::FunctionIdentifierInternalNode<void, double, char*, char*>>(std::make_tuple(), std::make_tuple(), std::make_tuple(buf_4,buf_5,-0.0,buf_6,buf_7));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node11 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(1.5707963267948966, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(1.0), std::make_tuple(1.0));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node12 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(3.6893488147419103e+19, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.0), std::make_tuple(0.0));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node13 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(0.7887730869248576, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.6619858980995045), std::make_tuple(0.6619858980995045));
char* buf_8 = (char*) malloc(5);
if(buf_8) { buffers_.push_back(buf_8); std::memcpy(buf_8, "\x00\x00\xc0\xff", 4); } else { throw std::runtime_error("malloc failed"); }
char* buf_9 = (char*) malloc(5);
if(buf_9) { buffers_.push_back(buf_9); std::memcpy(buf_9, "\x00\x00\xc0\xff", 4); } else { throw std::runtime_error("malloc failed"); }
char* buf_10 = (char*) malloc(5);
if(buf_10) { buffers_.push_back(buf_10); std::memcpy(buf_10, "\x00\x00\xc0\x7f", 4); } else { throw std::runtime_error("malloc failed"); }
char* buf_11 = (char*) malloc(5);
if(buf_11) { buffers_.push_back(buf_11); std::memcpy(buf_11, "\x00\x00\xc0\x7f", 4); } else { throw std::runtime_error("malloc failed"); }
std::shared_ptr<fbf::FunctionIdentifierInternalNode<void, double, char*, char*>> node14 = std::make_shared<fbf::FunctionIdentifierInternalNode<void, double, char*, char*>>(std::make_tuple(), std::make_tuple(), std::make_tuple(buf_8,buf_9,0.0,buf_10,buf_11));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node15 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(2.91668914109908, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(9.267056966972586), std::make_tuple(9.267056966972586));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node16 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(0.9742849645674905, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.5617597462207241), std::make_tuple(0.5617597462207241));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node17 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(-3.6893488147419103e+19, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(-2.0), std::make_tuple(-2.0));
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node18 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(0.7123571263197349, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(0.7741522965913037), std::make_tuple(0.7741522965913037));
std::shared_ptr<fbf::FunctionIdentifierNode> acoshf_ = std::make_shared<fbf::FunctionIdentifierNode>("acoshf");
std::shared_ptr<fbf::FunctionIdentifierNode> asinhl_ = std::make_shared<fbf::FunctionIdentifierNode>("asinhl");
std::shared_ptr<fbf::FunctionIdentifierNode> cosf_ = std::make_shared<fbf::FunctionIdentifierNode>("cosf");
std::shared_ptr<fbf::FunctionIdentifierNode> acosl_ = std::make_shared<fbf::FunctionIdentifierNode>("acosl");
std::shared_ptr<fbf::FunctionIdentifierNode> acoshl_ = std::make_shared<fbf::FunctionIdentifierNode>("acoshl");
std::shared_ptr<fbf::FunctionIdentifierNode> sincosf_ = std::make_shared<fbf::FunctionIdentifierNode>("sincosf");
std::shared_ptr<fbf::FunctionIdentifierNode> cosl_ = std::make_shared<fbf::FunctionIdentifierNode>("cosl");
std::shared_ptr<fbf::FunctionIdentifierInternalNode<double, double>> node26 = std::make_shared<fbf::FunctionIdentifierInternalNode<double, double>>(-0.0, sizeof(double), std::make_tuple(sizeof(double)), std::make_tuple(-0.0), std::make_tuple(-0.0));
std::shared_ptr<fbf::FunctionIdentifierNode> asinhf_ = std::make_shared<fbf::FunctionIdentifierNode>("asinhf");
std::shared_ptr<fbf::FunctionIdentifierNode> coshf_ = std::make_shared<fbf::FunctionIdentifierNode>("coshf");
std::shared_ptr<fbf::FunctionIdentifierNode> asinl_ = std::make_shared<fbf::FunctionIdentifierNode>("asinl");
std::shared_ptr<fbf::FunctionIdentifierNode> sincos_ = std::make_shared<fbf::FunctionIdentifierNode>("sincos");
std::shared_ptr<fbf::FunctionIdentifierNode> coshl_ = std::make_shared<fbf::FunctionIdentifierNode>("coshl");
std::shared_ptr<fbf::FunctionIdentifierNode> asinf_ = std::make_shared<fbf::FunctionIdentifierNode>("asinf");
std::shared_ptr<fbf::FunctionIdentifierNode> sincosl_ = std::make_shared<fbf::FunctionIdentifierNode>("sincosl");
std::shared_ptr<fbf::FunctionIdentifierNode> acosf_ = std::make_shared<fbf::FunctionIdentifierNode>("acosf");
std::shared_ptr<fbf::FunctionIdentifierNode> acosh_ = std::make_shared<fbf::FunctionIdentifierNode>("acosh");
std::shared_ptr<fbf::FunctionIdentifierNode> acos_ = std::make_shared<fbf::FunctionIdentifierNode>("acos");
std::shared_ptr<fbf::FunctionIdentifierNode> asinh_ = std::make_shared<fbf::FunctionIdentifierNode>("asinh");
std::shared_ptr<fbf::FunctionIdentifierNode> cos_ = std::make_shared<fbf::FunctionIdentifierNode>("cos");
std::shared_ptr<fbf::FunctionIdentifierNode> cosh_ = std::make_shared<fbf::FunctionIdentifierNode>("cosh");
std::shared_ptr<fbf::FunctionIdentifierNode> asin_ = std::make_shared<fbf::FunctionIdentifierNode>("asin");
root->set_pass_node(asin_);
node1->set_pass_node(cosh_);
node2->set_pass_node(cos_);
node3->set_pass_node(asinh_);
node4->set_pass_node(acos_);
node5->set_pass_node(acosh_);
node6->set_pass_node(acosf_);
node7->set_pass_node(sincosl_);
node8->set_pass_node(asinf_);
node9->set_pass_node(coshl_);
node10->set_pass_node(sincos_);
node11->set_pass_node(asinl_);
node12->set_pass_node(node26);
node13->set_pass_node(cosl_);
node14->set_pass_node(sincosf_);
node15->set_pass_node(acoshl_);
node16->set_pass_node(acosl_);
node17->set_pass_node(cosf_);
node18->set_pass_node(asinhl_);
node26->set_pass_node(coshf_);
root->set_fail_node(node1);
node1->set_fail_node(node2);
node2->set_fail_node(node3);
node3->set_fail_node(node4);
node4->set_fail_node(node5);
node5->set_fail_node(node6);
node6->set_fail_node(node7);
node7->set_fail_node(node8);
node8->set_fail_node(node9);
node9->set_fail_node(node10);
node10->set_fail_node(node11);
node11->set_fail_node(node12);
node12->set_fail_node(node13);
node13->set_fail_node(node14);
node14->set_fail_node(node15);
node15->set_fail_node(node16);
node16->set_fail_node(node17);
node17->set_fail_node(node18);
node18->set_fail_node(acoshf_);
node26->set_fail_node(asinhf_);
